{"ast":null,"code":"var _jsxFileName = \"/home/emad/code/video-chat-app/frontend/src/components/room.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Room = props => {\n  _s();\n\n  const userVideo = useRef();\n  const userStream = useRef();\n  const partnerVideo = useRef(); // const peerRef = useRef();\n  // const webSocketRef = useRef();\n\n  const openCamera = async () => {\n    const allDevices = await navigator.mediaDevices.enumerateDevices();\n    const cameras = allDevices.filter(device => device.kind == \"videoinput\");\n    const constraints = {\n      audio: true,\n      video: {\n        deviceId: cameras[0].deviceId\n      }\n    };\n\n    try {\n      return await navigator.mediaDevices.getUserMedia(constraints);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    openCamera().then(stream => {\n      userVideo.current.srcObject = stream;\n      userStream.current = stream;\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      autoPlay: true,\n      controls: true,\n      ref: userVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      autoPlay: true,\n      controls: true,\n      ref: partnerVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Room, \"rw/tSANjH8+t9EFydROwvsGZFPo=\");\n\n_c = Room;\nexport default Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["/home/emad/code/video-chat-app/frontend/src/components/room.js"],"names":["React","useEffect","useRef","Room","props","userVideo","userStream","partnerVideo","openCamera","allDevices","navigator","mediaDevices","enumerateDevices","cameras","filter","device","kind","constraints","audio","video","deviceId","getUserMedia","err","console","log","then","stream","current","srcObject"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;;;AAGA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACpB,QAAMC,SAAS,GAAGH,MAAM,EAAxB;AACA,QAAMI,UAAU,GAAGJ,MAAM,EAAzB;AACA,QAAMK,YAAY,GAAGL,MAAM,EAA3B,CAHoB,CAIpB;AACA;;AACA,QAAMM,UAAU,GAAG,YAAY;AAC3B,UAAMC,UAAU,GAAG,MAAMC,SAAS,CAACC,YAAV,CAAuBC,gBAAvB,EAAzB;AACA,UAAMC,OAAO,GAAGJ,UAAU,CAACK,MAAX,CAAmBC,MAAD,IAAYA,MAAM,CAACC,IAAP,IAAe,YAA7C,CAAhB;AAEA,UAAOC,WAAW,GAAG;AACjBC,MAAAA,KAAK,EAAE,IADU;AAEjBC,MAAAA,KAAK,EAAE;AACHC,QAAAA,QAAQ,EAAEP,OAAO,CAAC,CAAD,CAAP,CAAWO;AADlB;AAFU,KAArB;;AAMA,QAAI;AACA,aAAO,MAAMV,SAAS,CAACC,YAAV,CAAuBU,YAAvB,CAAoCJ,WAApC,CAAb;AACH,KAFD,CAEE,OAAOK,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,GAfD;;AAmBArB,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,UAAU,GAAGiB,IAAb,CAAmBC,MAAD,IAAY;AAC1BrB,MAAAA,SAAS,CAACsB,OAAV,CAAkBC,SAAlB,GAA+BF,MAA/B;AACApB,MAAAA,UAAU,CAACqB,OAAX,GAAqBD,MAArB;AAEH,KAJD;AAOH,GARQ,CAAT;AASA,sBACI;AAAA,4BACI;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,QAAQ,EAAE,IAA1B;AAAgC,MAAA,GAAG,EAAErB;AAArC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,QAAQ,EAAE,IAA1B;AAAgC,MAAA,GAAG,EAAEE;AAArC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAxCD;;GAAMJ,I;;KAAAA,I;AAyCN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport { useEffect, useRef } from 'react';\n\n\nconst Room = (props) => {\n    const userVideo = useRef();\n    const userStream = useRef();\n    const partnerVideo = useRef();\n    // const peerRef = useRef();\n    // const webSocketRef = useRef();\n    const openCamera = async () => {\n        const allDevices = await navigator.mediaDevices.enumerateDevices()\n        const cameras = allDevices.filter((device) => device.kind == \"videoinput\"\n        );\n        const  constraints = {\n            audio: true,\n            video: {\n                deviceId: cameras[0].deviceId\n            },\n        };\n        try {\n            return await navigator.mediaDevices.getUserMedia(constraints)\n        } catch (err) {\n            console.log(err)                        \n        }\n    };    \n    \n\n\n    useEffect(() => {\n        openCamera().then((stream) => {\n            userVideo.current.srcObject =  stream\n            userStream.current = stream         \n            \n        });\n        \n\n    });\n    return (\n        <div>\n            <video autoPlay controls={true} ref={userVideo}></video>\n            <video autoPlay controls={true} ref={partnerVideo}></video>\n        </div>\n    )\n}\nexport default Room;"]},"metadata":{},"sourceType":"module"}